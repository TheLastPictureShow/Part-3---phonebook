{"version":3,"sources":["Entry.js","services/entries.js","Persons.js","Notification.js","Form.js","App.js","index.js"],"names":["Entry","name","number","removeEntry","onClick","baseUrl","entryService","getAll","axios","get","then","response","data","create","newObject","post","remove","url","delete","Persons","persons","setPersons","map","el","index","id","window","confirm","filter","entry","Notification","message","style","color","background","fontSize","borderRadius","padding","marginBottom","borderStyle","Form","newName","setNewName","newNumber","setNewNumber","handleNameChange","handleNumberChange","setMessage","console","log","onSubmit","event","preventDefault","includes","alert","entryObject","setTimeout","value","onChange","type","App","useState","useEffect","initialEntries","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.863f55da.chunk.js","sourcesContent":["const Entry = ({ name, number, removeEntry }) => {\n  return (\n    <div>\n      {name}, {number}\n      {\"\"}\n      <button onClick={removeEntry}>Delete</button>\n    </div>\n  );\n};\n\nexport default Entry;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (url) => {\n  const request = axios.delete(url);\n  return request;\n};\n\nconst entryService = { getAll, create, remove };\n\nexport default entryService;\n","import Entry from \"./Entry\";\nimport entryService from \"./services/entries\";\n\nconst Persons = ({ persons, setPersons }) => {\n  // Let's make a function that will remove an entry from the state:\n  const removeEntry = (name, id) => {\n    window.confirm(`Delete ${name}?`);\n    const url = `http://localhost:3001/api/persons/${id}`;\n    entryService.remove(url).then(() => {\n      setPersons(persons.filter((entry) => entry.id !== id));\n    });\n  };\n\n  return persons.map((el, index) => (\n    <Entry\n      name={el.name}\n      number={el.number}\n      key={index}\n      removeEntry={() => removeEntry(el.name, el.id)}\n    />\n  ));\n};\n\nexport default Persons;\n","const Notification = ({ message }) => {\n  const green = {\n    color: \"green\",\n    background: \"lightgray\",\n    fontSize: 18,\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    borderStyle: \"solid\",\n  };\n\n  if (message === null) {\n    return null;\n  }\n\n  return <div style={green}>{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\nimport Notification from \"./Notification\";\n// entryService is a module with backend functionality (axios):\nimport entryService from \"./services/entries\";\n\nconst Form = ({\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber,\n  persons,\n  setPersons,\n  handleNameChange,\n  handleNumberChange,\n  message,\n  setMessage,\n}) => {\n  // Let's add the user entry into the state:\n  const addEntry = (event) => {\n    // First we prevent the default behavior of the form when submitted:\n    event.preventDefault();\n    // Now let's check if the entry already exists in the \"persons\" state array:\n    const exists = persons.map((el) => el.name);\n    // We get an array of existing names. Let's adjust the function:\n    if (exists.includes(newName)) {\n      // The entry exists. Let's warn the user about that:\n      alert(`${newName} is already added to the phonebook.`);\n    } else {\n      // The entry doesn't exist. Let's create an object with the new entry:\n      const entryObject = {\n        name: newName,\n        number: newNumber,\n      };\n      // Let's post the new entry to the server:\n      entryService.create(entryObject).then((response) => {\n        // Let's reset the pieces of state for the input fields to their default values:\n        setNewName(\"\");\n        setNewNumber(\"\");\n        // Let's set a message for the notification:\n        setMessage(`Added ${newName}`);\n        // Let's set a timeout for the notification:\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        // Let's update the \"persons\" state array with the response from the fulfilled promise:\n        setPersons(response);\n      });\n    }\n  };\n  console.log(\"persons is\", persons);\n\n  return (\n    <form onSubmit={addEntry}>\n      <Notification message={message} />\n      <h2>Add a new:</h2>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport Persons from \"./Persons\";\nimport Form from \"./Form\";\n// entryService is a module with backend functionality (axios):\nimport entryService from \"./services/entries\";\n\nconst App = () => {\n  // Let's create our pieces of state:\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    /* Let's get the initial phonebook entries from the server to set\n       the \"persons\" state: */\n    entryService.getAll().then((initialEntries) => {\n      setPersons(initialEntries);\n    });\n  }, []);\n\n  const handleNameChange = (event) => {\n    // Let's set the user input from the name input field into the \"newName\" piece of state:\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    // Let's do the same, but for the number input field:\n    setNewNumber(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Form\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        persons={persons}\n        setPersons={setPersons}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        message={message}\n        setMessage={setMessage}\n      />\n      <h2>Entries:</h2>\n      <Persons persons={persons} setPersons={setPersons} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}